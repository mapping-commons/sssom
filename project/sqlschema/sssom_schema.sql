-- # Class: "mapping set" Description: "Represents a set of mappings"
--     * Slot: id Description: 
--     * Slot: mapping_set_id Description: A globally unique identifier for the mapping set (not each individual mapping). Should be IRI, ideally resolvable.
--     * Slot: mapping_set_version Description: A version string for the mapping.
--     * Slot: mapping_set_title Description: The display name of a mapping set.
--     * Slot: mapping_set_description Description: A description of the mapping set.
--     * Slot: license Description: A url to the license of the mapping. In absence of a license we assume no license.
--     * Slot: subject_type Description: The type of entity that is being mapped.
--     * Slot: subject_source Description: URI of vocabulary or identifier source for the subject.
--     * Slot: subject_source_version Description: Version IRI or version string of the source of the subject term.
--     * Slot: object_type Description: The type of entity that is being mapped.
--     * Slot: object_source Description: URI of vocabulary or identifier source for the object.
--     * Slot: object_source_version Description: Version IRI or version string of the source of the object term.
--     * Slot: mapping_provider Description: URL pointing to the source that provided the mapping, for example an ontology that already contains the mappings, or a database from which it was derived.
--     * Slot: mapping_tool Description: A reference to the tool or algorithm that was used to generate the mapping. Should be a URL pointing to more info about it, but can be free text.
--     * Slot: mapping_tool_version Description: Version string that denotes the version of the mapping tool used.
--     * Slot: mapping_date Description: The date the mapping was asserted. This is different from the date the mapping was published or compiled in a SSSOM file.
--     * Slot: publication_date Description: The date the mapping was published. This is different from the date the mapping was asserted.
--     * Slot: issue_tracker Description: A URL location of the issue tracker for this entity.
--     * Slot: other Description: Pipe separated list of key value pairs for properties not part of the SSSOM spec. Can be used to encode additional provenance data.
--     * Slot: comment Description: Free text field containing either curator notes or text generated by tool providing additional informative information.
-- # Class: "mapping" Description: "Represents an individual mapping between a pair of entities"
--     * Slot: id Description: 
--     * Slot: subject_id Description: The ID of the subject of the mapping.
--     * Slot: subject_label Description: The label of subject of the mapping
--     * Slot: subject_category Description: The conceptual category to which the subject belongs to. This can be a string denoting the category or a term from a controlled vocabulary. This slot is deliberately underspecified. Conceptual categories can range from those that are found in general upper ontologies such as BFO (e.g. process, temporal region, etc) to those that serve as upper ontologies in specific domains, such as COB or BioLink (e.g. gene, disease, chemical entity). The purpose of this optional field is documentation for human reviewers - when a category is known and documented clearly, the cost of interpreting and evaluating the mapping decreases.
--     * Slot: predicate_id Description: The ID of the predicate or relation that relates the subject and object of this match.
--     * Slot: predicate_label Description: The label of the predicate/relation of the mapping
--     * Slot: predicate_modifier Description: A modifier for negating the predicate. See https://github.com/mapping-commons/sssom/issues/40 for discussion
--     * Slot: object_id Description: The ID of the object of the mapping.
--     * Slot: object_label Description: The label of object of the mapping
--     * Slot: object_category Description: The conceptual category to which the subject belongs to. This can be a string denoting the category or a term from a controlled vocabulary. This slot is deliberately underspecified. Conceptual categories can range from those that are found in general upper ontologies such as BFO (e.g. process, temporal region, etc) to those that serve as upper ontologies in specific domains, such as COB or BioLink (e.g. gene, disease, chemical entity). The purpose of this optional field is documentation for human reviewers - when a category is known and documented clearly, the cost of interpreting and evaluating the mapping decreases.
--     * Slot: mapping_justification Description: A mapping justification is an action (or the written representation of that action) of showing a mapping to be right or reasonable.
--     * Slot: license Description: A url to the license of the mapping. In absence of a license we assume no license.
--     * Slot: subject_type Description: The type of entity that is being mapped.
--     * Slot: subject_source Description: URI of vocabulary or identifier source for the subject.
--     * Slot: subject_source_version Description: Version IRI or version string of the source of the subject term.
--     * Slot: object_type Description: The type of entity that is being mapped.
--     * Slot: object_source Description: URI of vocabulary or identifier source for the object.
--     * Slot: object_source_version Description: Version IRI or version string of the source of the object term.
--     * Slot: mapping_provider Description: URL pointing to the source that provided the mapping, for example an ontology that already contains the mappings, or a database from which it was derived.
--     * Slot: mapping_source Description: The mapping set this mapping was originally defined in. mapping_source is used for example when merging multiple mapping sets or deriving one mapping set from another.
--     * Slot: mapping_cardinality Description: A string indicating whether this mapping is from a 1:1 (the subject_id maps to a single object_id), 1:n (the subject maps to more than one object_id), n:1, 1:0, 0:1 or n:n group. Note that this is a convenience field that should be derivable from the mapping set.
--     * Slot: mapping_tool Description: A reference to the tool or algorithm that was used to generate the mapping. Should be a URL pointing to more info about it, but can be free text.
--     * Slot: mapping_tool_version Description: Version string that denotes the version of the mapping tool used.
--     * Slot: mapping_date Description: The date the mapping was asserted. This is different from the date the mapping was published or compiled in a SSSOM file.
--     * Slot: publication_date Description: The date the mapping was published. This is different from the date the mapping was asserted.
--     * Slot: confidence Description: A score between 0 and 1 to denote the confidence or probability that the match is correct, where 1 denotes total confidence.
--     * Slot: similarity_score Description: A score between 0 and 1 to denote the similarity between two entities, where 1 denotes equivalence, and 0 denotes disjointness. The score is meant to be used in conjunction with the similarity_measure field, to document, for example, the lexical or semantic match of a matching algorithm.
--     * Slot: similarity_measure Description: The measure used for computing a similarity score. This field is meant to be used in conjunction with the similarity_score field, to document, for example, the lexical or semantic match of a matching algorithm. To make processing this field as unambiguous as possible, we recommend using wikidata CURIEs, but the type of this field is deliberately unspecified.
--     * Slot: issue_tracker_item Description: The issue tracker item discussing this mapping.
--     * Slot: other Description: Pipe separated list of key value pairs for properties not part of the SSSOM spec. Can be used to encode additional provenance data.
--     * Slot: comment Description: Free text field containing either curator notes or text generated by tool providing additional informative information.
--     * Slot: mapping set_id Description: Autocreated FK slot
-- # Class: "mapping registry" Description: "A registry for managing mapping sets. It holds a set of mapping set references, and can import other registries."
--     * Slot: id Description: 
--     * Slot: mapping_registry_id Description: The unique identifier of a mapping registry.
--     * Slot: mapping_registry_title Description: The title of a mapping registry.
--     * Slot: mapping_registry_description Description: The description of a mapping registry.
--     * Slot: documentation Description: A URL to the documentation of this mapping commons.
--     * Slot: homepage Description: A URL to a homepage of this mapping commons.
--     * Slot: issue_tracker Description: A URL location of the issue tracker for this entity.
-- # Class: "mapping set reference" Description: "A reference to a mapping set. It allows to augment mapping set metadata from the perspective of the registry, for example, providing confidence, or a local filename or a grouping."
--     * Slot: id Description: 
--     * Slot: mapping_set_id Description: A globally unique identifier for the mapping set (not each individual mapping). Should be IRI, ideally resolvable.
--     * Slot: mirror_from Description: A URL location from which to obtain a resource, such as a mapping set.
--     * Slot: registry_confidence Description: This value is set by the registry that indexes the mapping set. It reflects the confidence the registry has in the correctness of the mappings in the mapping set.
--     * Slot: mapping_set_group Description: Set by the owners of the mapping registry. A way to group .
--     * Slot: last_updated Description: The date this reference was last updated.
--     * Slot: local_name Description: The local name assigned to file that corresponds to the downloaded mapping set.
-- # Class: "prefix" Description: ""
--     * Slot: prefix_name Description: 
--     * Slot: prefix_url Description: 
--     * Slot: mapping set_id Description: Autocreated FK slot
-- # Class: "extension definition" Description: "A definition of an extension (non-standard) slot."
--     * Slot: id Description: 
--     * Slot: slot_name Description: The name of the extension slot.
--     * Slot: property Description: The property associated with the extension slot. It is intended to provide a non-ambiguous meaning to the slot (contrary to the slot_name, which for brevity reasons may be ambiguous).
--     * Slot: type_hint Description: Expected type of the values of the extension slot.
-- # Class: "Propagatable" Description: "Metamodel extension class to describe slots whose value can be propagated down from the MappingSet class to the Mapping class."
--     * Slot: id Description: 
--     * Slot: propagated Description: Indicates whether a slot can be propagated from a mapping down to individual mappings.
-- # Class: "NoTermFound" Description: "sssom:NoTermFound can be used in place of a subject_id or object_id when the corresponding entity could not be found. It SHOULD be used in conjunction with a corresponding subject_source or object_source to signify where the term was not found."
--     * Slot: id Description: 
-- # Class: "mapping set_mapping_set_source" Description: ""
--     * Slot: mapping set_id Description: Autocreated FK slot
--     * Slot: mapping_set_source Description: A mapping set or set of mapping set that was used to derive the mapping set.
-- # Class: "mapping set_creator_id" Description: ""
--     * Slot: mapping set_id Description: Autocreated FK slot
--     * Slot: creator_id Description: Identifies the persons or groups responsible for the creation of the mapping. The creator is the agent that put the mapping in its published form, which may be different from the author, which is a person that was actively involved in the assertion of the mapping. Recommended to be a list of ORCIDs or otherwise identifying URIs.
-- # Class: "mapping set_creator_label" Description: ""
--     * Slot: mapping set_id Description: Autocreated FK slot
--     * Slot: creator_label Description: A string identifying the creator of this mapping. In the spirit of provenance, consider using creator_id instead.
-- # Class: "mapping set_subject_match_field" Description: ""
--     * Slot: mapping set_id Description: Autocreated FK slot
--     * Slot: subject_match_field Description: A list of properties (term annotations on the subject) that was used for the match.
-- # Class: "mapping set_object_match_field" Description: ""
--     * Slot: mapping set_id Description: Autocreated FK slot
--     * Slot: object_match_field Description: A list of properties (term annotations on the object) that was used for the match.
-- # Class: "mapping set_subject_preprocessing" Description: ""
--     * Slot: mapping set_id Description: Autocreated FK slot
--     * Slot: subject_preprocessing Description: Method of preprocessing applied to the fields of the subject. If different preprocessing steps were performed on different fields, it is recommended to store the match in separate rows.
-- # Class: "mapping set_object_preprocessing" Description: ""
--     * Slot: mapping set_id Description: Autocreated FK slot
--     * Slot: object_preprocessing Description: Method of preprocessing applied to the fields of the object. If different preprocessing steps were performed on different fields, it is recommended to store the match in separate rows.
-- # Class: "mapping set_see_also" Description: ""
--     * Slot: mapping set_id Description: Autocreated FK slot
--     * Slot: see_also Description: A URL specific for the mapping instance. E.g. for kboom we have a per-mapping image that shows surrounding axioms that drive probability. Could also be a github issue URL that discussed a complicated alignment
-- # Class: "mapping set_extension_definitions" Description: ""
--     * Slot: mapping set_id Description: Autocreated FK slot
--     * Slot: extension_definitions_id Description: A list that defines the extension slots used in the mapping set.
-- # Class: "mapping_author_id" Description: ""
--     * Slot: mapping_id Description: Autocreated FK slot
--     * Slot: author_id Description: Identifies the persons or groups responsible for asserting the mappings. Recommended to be a list of ORCIDs or otherwise identifying URIs.
-- # Class: "mapping_author_label" Description: ""
--     * Slot: mapping_id Description: Autocreated FK slot
--     * Slot: author_label Description: A string identifying the author of this mapping. In the spirit of provenance, consider using author_id instead.
-- # Class: "mapping_reviewer_id" Description: ""
--     * Slot: mapping_id Description: Autocreated FK slot
--     * Slot: reviewer_id Description: Identifies the persons or groups that reviewed and confirmed the mapping. Recommended to be a list of ORCIDs or otherwise identifying URIs.
-- # Class: "mapping_reviewer_label" Description: ""
--     * Slot: mapping_id Description: Autocreated FK slot
--     * Slot: reviewer_label Description: A string identifying the reviewer of this mapping. In the spirit of provenance, consider using reviewer_id instead.
-- # Class: "mapping_creator_id" Description: ""
--     * Slot: mapping_id Description: Autocreated FK slot
--     * Slot: creator_id Description: Identifies the persons or groups responsible for the creation of the mapping. The creator is the agent that put the mapping in its published form, which may be different from the author, which is a person that was actively involved in the assertion of the mapping. Recommended to be a list of ORCIDs or otherwise identifying URIs.
-- # Class: "mapping_creator_label" Description: ""
--     * Slot: mapping_id Description: Autocreated FK slot
--     * Slot: creator_label Description: A string identifying the creator of this mapping. In the spirit of provenance, consider using creator_id instead.
-- # Class: "mapping_curation_rule" Description: ""
--     * Slot: mapping_id Description: Autocreated FK slot
--     * Slot: curation_rule Description: A curation rule is a (potentially) complex condition executed by an agent that led to the establishment of a mapping. Curation rules often involve complex domain-specific considerations, which are hard to capture in an automated fashion. The curation rule is captured as a resource rather than a string, which enables higher levels of transparency and sharing across mapping sets. The URI representation of the curation rule is expected to be a resolvable identifier which provides details about the nature of the curation rule.
-- # Class: "mapping_curation_rule_text" Description: ""
--     * Slot: mapping_id Description: Autocreated FK slot
--     * Slot: curation_rule_text Description: A curation rule is a (potentially) complex condition executed by an agent that led to the establishment of a mapping. Curation rules often involve complex domain-specific considerations, which are hard to capture in an automated fashion. The curation rule should be captured as a resource (entity reference) rather than a string (see curation_rule element), which enables higher levels of transparency and sharing across mapping sets. The textual representation of curation rule is intended to be used in cases where (1) the creation of a resource is not practical from the perspective of the mapping_provider and (2) as an additional piece of metadata to augment the curation_rule element with a human readable text.
-- # Class: "mapping_subject_match_field" Description: ""
--     * Slot: mapping_id Description: Autocreated FK slot
--     * Slot: subject_match_field Description: A list of properties (term annotations on the subject) that was used for the match.
-- # Class: "mapping_object_match_field" Description: ""
--     * Slot: mapping_id Description: Autocreated FK slot
--     * Slot: object_match_field Description: A list of properties (term annotations on the object) that was used for the match.
-- # Class: "mapping_match_string" Description: ""
--     * Slot: mapping_id Description: Autocreated FK slot
--     * Slot: match_string Description: String that is shared by subj/obj. It is recommended to indicate the fields for the match using the object and subject_match_field slots.
-- # Class: "mapping_subject_preprocessing" Description: ""
--     * Slot: mapping_id Description: Autocreated FK slot
--     * Slot: subject_preprocessing Description: Method of preprocessing applied to the fields of the subject. If different preprocessing steps were performed on different fields, it is recommended to store the match in separate rows.
-- # Class: "mapping_object_preprocessing" Description: ""
--     * Slot: mapping_id Description: Autocreated FK slot
--     * Slot: object_preprocessing Description: Method of preprocessing applied to the fields of the object. If different preprocessing steps were performed on different fields, it is recommended to store the match in separate rows.
-- # Class: "mapping_see_also" Description: ""
--     * Slot: mapping_id Description: Autocreated FK slot
--     * Slot: see_also Description: A URL specific for the mapping instance. E.g. for kboom we have a per-mapping image that shows surrounding axioms that drive probability. Could also be a github issue URL that discussed a complicated alignment
-- # Class: "mapping registry_imports" Description: ""
--     * Slot: mapping registry_id Description: Autocreated FK slot
--     * Slot: imports Description: A list of registries that should be imported into this one.
-- # Class: "mapping registry_mapping_set_references" Description: ""
--     * Slot: mapping registry_id Description: Autocreated FK slot
--     * Slot: mapping_set_references_id Description: A list of mapping set references.

CREATE TABLE "mapping set" (
	id INTEGER NOT NULL, 
	mapping_set_id TEXT NOT NULL, 
	mapping_set_version TEXT, 
	mapping_set_title TEXT, 
	mapping_set_description TEXT, 
	license TEXT NOT NULL, 
	subject_type VARCHAR(23), 
	subject_source TEXT, 
	subject_source_version TEXT, 
	object_type VARCHAR(23), 
	object_source TEXT, 
	object_source_version TEXT, 
	mapping_provider TEXT, 
	mapping_tool TEXT, 
	mapping_tool_version TEXT, 
	mapping_date DATE, 
	publication_date DATE, 
	issue_tracker TEXT, 
	other TEXT, 
	comment TEXT, 
	PRIMARY KEY (id)
);
CREATE TABLE "mapping registry" (
	id INTEGER NOT NULL, 
	mapping_registry_id TEXT NOT NULL, 
	mapping_registry_title TEXT, 
	mapping_registry_description TEXT, 
	documentation TEXT, 
	homepage TEXT, 
	issue_tracker TEXT, 
	PRIMARY KEY (id)
);
CREATE TABLE "mapping set reference" (
	id INTEGER NOT NULL, 
	mapping_set_id TEXT NOT NULL, 
	mirror_from TEXT, 
	registry_confidence FLOAT, 
	mapping_set_group TEXT, 
	last_updated DATE, 
	local_name TEXT, 
	PRIMARY KEY (id)
);
CREATE TABLE "extension definition" (
	id INTEGER NOT NULL, 
	slot_name TEXT NOT NULL, 
	property TEXT, 
	type_hint TEXT, 
	PRIMARY KEY (id)
);
CREATE TABLE "Propagatable" (
	id INTEGER NOT NULL, 
	propagated BOOLEAN, 
	PRIMARY KEY (id)
);
CREATE TABLE "NoTermFound" (
	id INTEGER NOT NULL, 
	PRIMARY KEY (id)
);
CREATE TABLE mapping (
	id INTEGER NOT NULL, 
	subject_id TEXT, 
	subject_label TEXT, 
	subject_category TEXT, 
	predicate_id TEXT NOT NULL, 
	predicate_label TEXT, 
	predicate_modifier VARCHAR(3), 
	object_id TEXT, 
	object_label TEXT, 
	object_category TEXT, 
	mapping_justification TEXT NOT NULL, 
	license TEXT, 
	subject_type VARCHAR(23), 
	subject_source TEXT, 
	subject_source_version TEXT, 
	object_type VARCHAR(23), 
	object_source TEXT, 
	object_source_version TEXT, 
	mapping_provider TEXT, 
	mapping_source TEXT, 
	mapping_cardinality VARCHAR(3), 
	mapping_tool TEXT, 
	mapping_tool_version TEXT, 
	mapping_date DATE, 
	publication_date DATE, 
	confidence FLOAT, 
	similarity_score FLOAT, 
	similarity_measure TEXT, 
	issue_tracker_item TEXT, 
	other TEXT, 
	comment TEXT, 
	"mapping set_id" INTEGER, 
	PRIMARY KEY (id), 
	FOREIGN KEY("mapping set_id") REFERENCES "mapping set" (id)
);
CREATE TABLE prefix (
	prefix_name TEXT NOT NULL, 
	prefix_url TEXT, 
	"mapping set_id" INTEGER, 
	PRIMARY KEY (prefix_name, prefix_url, "mapping set_id"), 
	FOREIGN KEY("mapping set_id") REFERENCES "mapping set" (id)
);
CREATE TABLE "mapping set_mapping_set_source" (
	"mapping set_id" INTEGER, 
	mapping_set_source TEXT, 
	PRIMARY KEY ("mapping set_id", mapping_set_source), 
	FOREIGN KEY("mapping set_id") REFERENCES "mapping set" (id)
);
CREATE TABLE "mapping set_creator_id" (
	"mapping set_id" INTEGER, 
	creator_id TEXT, 
	PRIMARY KEY ("mapping set_id", creator_id), 
	FOREIGN KEY("mapping set_id") REFERENCES "mapping set" (id)
);
CREATE TABLE "mapping set_creator_label" (
	"mapping set_id" INTEGER, 
	creator_label TEXT, 
	PRIMARY KEY ("mapping set_id", creator_label), 
	FOREIGN KEY("mapping set_id") REFERENCES "mapping set" (id)
);
CREATE TABLE "mapping set_subject_match_field" (
	"mapping set_id" INTEGER, 
	subject_match_field TEXT, 
	PRIMARY KEY ("mapping set_id", subject_match_field), 
	FOREIGN KEY("mapping set_id") REFERENCES "mapping set" (id)
);
CREATE TABLE "mapping set_object_match_field" (
	"mapping set_id" INTEGER, 
	object_match_field TEXT, 
	PRIMARY KEY ("mapping set_id", object_match_field), 
	FOREIGN KEY("mapping set_id") REFERENCES "mapping set" (id)
);
CREATE TABLE "mapping set_subject_preprocessing" (
	"mapping set_id" INTEGER, 
	subject_preprocessing TEXT, 
	PRIMARY KEY ("mapping set_id", subject_preprocessing), 
	FOREIGN KEY("mapping set_id") REFERENCES "mapping set" (id)
);
CREATE TABLE "mapping set_object_preprocessing" (
	"mapping set_id" INTEGER, 
	object_preprocessing TEXT, 
	PRIMARY KEY ("mapping set_id", object_preprocessing), 
	FOREIGN KEY("mapping set_id") REFERENCES "mapping set" (id)
);
CREATE TABLE "mapping set_see_also" (
	"mapping set_id" INTEGER, 
	see_also TEXT, 
	PRIMARY KEY ("mapping set_id", see_also), 
	FOREIGN KEY("mapping set_id") REFERENCES "mapping set" (id)
);
CREATE TABLE "mapping set_extension_definitions" (
	"mapping set_id" INTEGER, 
	extension_definitions_id INTEGER, 
	PRIMARY KEY ("mapping set_id", extension_definitions_id), 
	FOREIGN KEY("mapping set_id") REFERENCES "mapping set" (id), 
	FOREIGN KEY(extension_definitions_id) REFERENCES "extension definition" (id)
);
CREATE TABLE "mapping registry_imports" (
	"mapping registry_id" INTEGER, 
	imports TEXT, 
	PRIMARY KEY ("mapping registry_id", imports), 
	FOREIGN KEY("mapping registry_id") REFERENCES "mapping registry" (id)
);
CREATE TABLE "mapping registry_mapping_set_references" (
	"mapping registry_id" INTEGER, 
	mapping_set_references_id INTEGER, 
	PRIMARY KEY ("mapping registry_id", mapping_set_references_id), 
	FOREIGN KEY("mapping registry_id") REFERENCES "mapping registry" (id), 
	FOREIGN KEY(mapping_set_references_id) REFERENCES "mapping set reference" (id)
);
CREATE TABLE mapping_author_id (
	mapping_id INTEGER, 
	author_id TEXT, 
	PRIMARY KEY (mapping_id, author_id), 
	FOREIGN KEY(mapping_id) REFERENCES mapping (id)
);
CREATE TABLE mapping_author_label (
	mapping_id INTEGER, 
	author_label TEXT, 
	PRIMARY KEY (mapping_id, author_label), 
	FOREIGN KEY(mapping_id) REFERENCES mapping (id)
);
CREATE TABLE mapping_reviewer_id (
	mapping_id INTEGER, 
	reviewer_id TEXT, 
	PRIMARY KEY (mapping_id, reviewer_id), 
	FOREIGN KEY(mapping_id) REFERENCES mapping (id)
);
CREATE TABLE mapping_reviewer_label (
	mapping_id INTEGER, 
	reviewer_label TEXT, 
	PRIMARY KEY (mapping_id, reviewer_label), 
	FOREIGN KEY(mapping_id) REFERENCES mapping (id)
);
CREATE TABLE mapping_creator_id (
	mapping_id INTEGER, 
	creator_id TEXT, 
	PRIMARY KEY (mapping_id, creator_id), 
	FOREIGN KEY(mapping_id) REFERENCES mapping (id)
);
CREATE TABLE mapping_creator_label (
	mapping_id INTEGER, 
	creator_label TEXT, 
	PRIMARY KEY (mapping_id, creator_label), 
	FOREIGN KEY(mapping_id) REFERENCES mapping (id)
);
CREATE TABLE mapping_curation_rule (
	mapping_id INTEGER, 
	curation_rule TEXT, 
	PRIMARY KEY (mapping_id, curation_rule), 
	FOREIGN KEY(mapping_id) REFERENCES mapping (id)
);
CREATE TABLE mapping_curation_rule_text (
	mapping_id INTEGER, 
	curation_rule_text TEXT, 
	PRIMARY KEY (mapping_id, curation_rule_text), 
	FOREIGN KEY(mapping_id) REFERENCES mapping (id)
);
CREATE TABLE mapping_subject_match_field (
	mapping_id INTEGER, 
	subject_match_field TEXT, 
	PRIMARY KEY (mapping_id, subject_match_field), 
	FOREIGN KEY(mapping_id) REFERENCES mapping (id)
);
CREATE TABLE mapping_object_match_field (
	mapping_id INTEGER, 
	object_match_field TEXT, 
	PRIMARY KEY (mapping_id, object_match_field), 
	FOREIGN KEY(mapping_id) REFERENCES mapping (id)
);
CREATE TABLE mapping_match_string (
	mapping_id INTEGER, 
	match_string TEXT, 
	PRIMARY KEY (mapping_id, match_string), 
	FOREIGN KEY(mapping_id) REFERENCES mapping (id)
);
CREATE TABLE mapping_subject_preprocessing (
	mapping_id INTEGER, 
	subject_preprocessing TEXT, 
	PRIMARY KEY (mapping_id, subject_preprocessing), 
	FOREIGN KEY(mapping_id) REFERENCES mapping (id)
);
CREATE TABLE mapping_object_preprocessing (
	mapping_id INTEGER, 
	object_preprocessing TEXT, 
	PRIMARY KEY (mapping_id, object_preprocessing), 
	FOREIGN KEY(mapping_id) REFERENCES mapping (id)
);
CREATE TABLE mapping_see_also (
	mapping_id INTEGER, 
	see_also TEXT, 
	PRIMARY KEY (mapping_id, see_also), 
	FOREIGN KEY(mapping_id) REFERENCES mapping (id)
);