name: Deploy Documentation

# Controls when the action will run. Triggers the workflow on push
on:
  push:
    branches:
    - master
    paths:
    - 'src/docs/*'
    - 'project/jsonschema/sssom.schema.json'


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  #synchronize:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - uses: actions/checkout@v2
  #    - name: Merge master to gh-pages branch
  #      uses: devmasx/merge-branch@v1.1.0
  #      with:
  #        type: now
  #        target_branch: gh-pages
  #      env:
  #        GITHUB_TOKEN: ${{ github.token }}

  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will failed to push refs to dest repo

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      #----------------------------------------------
      #          install & configure poetry
      #----------------------------------------------
      - name: Install Poetry
        uses: snok/install-poetry@v1.3
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      #----------------------------------------------
      #       load cached venv if cache exists      
      #----------------------------------------------
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      #----------------------------------------------
      # install dependencies if cache does not exist 
      #----------------------------------------------
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      #----------------------------------------------
      #    install your root project, if required 
      #----------------------------------------------      
      - name: Install library
        run: poetry install --no-interaction

      - name: Create local changes
        run: |
          make all
      
      - name: Deploy to gh-pages branch
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          REPOSITORY_NAME: mapping-commons/sssom # The repository the action should deploy to
          BRANCH: gh-pages # The branch the action should deploy to.
          COMMIT_MESSAGE: 'Update documentation'
          FOLDER: . # The folder the action should deploy.